interview Questions for laravel => 100 Days Achivements 

DAY=>1 

1.What is laravel ?

Laravel is open-source php framework .it helps to developer build the website and mobile app.It is used to MVC Apporcach
like Model View Controller .The latet version of laravel is (12).

==========================================================================================================================

2.What is service container ?

In laravel service container is most power full tool. it  manageing the class dependenties injection and performance 

dependenties injection. Almost all the service container bindings will be register within service provider. (using bind method)

if you may be use bindif method to register a container binding only if a binding has not allready been registered.

==========================================================================================================================

3. Singleton

The singleton method binds a class or interface into the container that should only be resolved one time. 

=========================================================================================================================

4.singletonIf 

You may use the singletonIf method to register a singleton container binding only if a binding has not already been 
registered for the given type:

=======================================================================================================================

5.scoped singleton

The scoped method binds a class or interface into the container that should only be resolved one time within
a given Laravel request / job lifecycle. 

======================================================================================================================

6.scopedIf 

You may use the scopedIf method to register a scoped container binding only if a binding has not already
been registered for the given type:

=======================================================================================================================

7.PSR-11

Laravel's service container implements the PSR-11 interface. Therefore, you may type-hint the PSR-11 container
interface to obtain an instance of the Laravel container:

========================================================================================================================

8. Post method

Post method using data stored in the database .Like after user enter the details action is post.

========================================================================================================================

9.Get Method 

It is used to get the data form database and if is required show the data in view page.

=======================================================================================================================

10.What is middleware 

In Laravel middleware is used  Filter the HTTP request before entraing the application .Like if user send the request if user is authdicated means 
 
 allow the dashbaord page else redirect the login page.

=======================================================================================================================

11.What is Eloquent ORM ?

The Eloquent ORM is (Object Relational Mapping) easly we connect the database and get the data 
and post,update ,delete like CRED .

=========================================================================================================================
12.PHP Artisan command ?

The Php Artisan is Command-line interface tool and it comes with laravel.it helpes to run the command line and manages the 
laravel appplication.

========================================================================================================================

13.Laravel Relationships ?

Types :  One to One 
         one to Many 
         Many to One
         Many to Many
         Has many thorugh => A country has many post thorugh user 

14.What is laravel session ?

Laravel session is a way to stored the user data across  mutiple requests. it's like temporary Memory for the user lives on 
 the server while user browsing in your app.
  

15. What is obsever in laravel and how they are used ?

Observer is class that listen the model event, like created or updated  or deleted like that. That observer is register eventservice provider.

How to create :  Php artisan make:observer UserObserver --model=User   


16. what is accesser and mutator in laravel ?

In Laravel accesser and mutator are special methods allow to you how customize the model attribute and stored also retrived.

Accesser when you retrive the transform  model attribute like Capital letter;  (Get attribute)
Mutator mean model attribute set like Password storing in Encriped. (Set attribute).


17. what is event listener ?

Event listener is way to handle the action .When the event is occur the application listener
 is respond the event. like new user register the account listener is sent the welcome mail.

18.When observer use & when Event listener use ?

Observer : When your application model related work cycle you can use observer . like you have blog  you want create post so that time use can use observer.

Event Listener : if user register the account it automatically sent the welcome mail and register account conformation like that...


17. Explain the purpose boot method in model ?


used to model event hooks.(Like  createing , updating, deleting..)


18. Explain the purpose boot method in provider ?

it is used to register the observer and event listener or extend the other functionalitity of after all the service register.


19. What is laravel Collection ?


======================================================================
20.what is traits ?

php supports single inheritance child class have only one parent class . overcome this 

traits is used to (trait) key words  . it is used create n number function and that you can use class of (use keyword)

note : In class we can use N number of traits with help of use keyword..

trait SuperName {

    public function MasterClass1(){
        return 'true';
    }

    public function MasterClass2(){
        return 'false';
    }
}

class parentclass{

    use SuperName;
}

$obj = new parentclass();

$obj->Masterclass1();  // output  => true
$obj->Masterclass2();   // output  => false

reference : https://www.youtube.com/watch?v=iQGyOT0I0GI


=====================================================
21.what is interface ?

Interface super1{

    public function Showpage1();
}


Interface super2 extend super1{

    public function Showpage2();
}


class parent implements super2(){

      public function Showpage1(){
        echo "test 1 ";
      }
      public function Showpage2(){
        echo "test 2 ";
      }
}

Note:   In Interface what ever function you decleare those all the function 
need to call in class. like if connect with class means.

Interface to interface you can connect = extends (keyword)

Interface to class you can connect = implements (keyword)

Inside interface only public we can use . protected is not useable.

===============================================================================


22. what is Abstract ?

abstract class supermaster{

    abstract function master();
    abstract function master1();
    abstract function master2();
}

class adminmaster extends supermaster(){

    function master(){
        echo "test";
    }
     function master1(){
        echo "test1";
    }
     function master2(){
        echo "test2";
    }
    
}

$job = new adminmaster();

$job = master();
$job = master1();
$job = master2();

abstract key word must use inslide the class .

Abstract class run the child class only . we can not run the parent class.

abstract method can not contain body.

abstract class does not support mutiple inheritance.


abstract class SuperMaster {
    abstract public function work();
}

abstract class AdminMaster extends SuperMaster {
    public function commonTask() {
        echo "Doing common task";
    }
}

abstract class mainmaster extends AdminMaster{

    public function task(){
        echo "welcome the page";
    }
}


https://www.youtube.com/watch?v=LEHAYq6Gic4
=====================================================================

1. What is Inheritance? 

The parent class method inherit in child class like 

class master{
    public good(){
        echo " good master ";
    }
}

class admin extends master{

    public function bad(){
        echo " bad master";
    }
}

$out = new admin();

$out  = good(); /* output ----------- god master */
$out  = bad();  /* output ----------- god master */


========================================================================
What is Final keyword ?

The Final keyword class is can not be extend and that class function can't not be overridding .

if you use final class, that class inside all the function is final .

final class  A {

    public function test(){

        echo "test";
    }
}
=========================================================================
https://www.youtube.com/watch?v=PsypBup5qWc

Difference Between Function Overloading and Overriding in OOPS  ?

Overloading means same function name and different number of arg is called Overloading.

code  :

class A {

    public funtion test($a){
         $result = $a+10;
         echo " Result ".$result.";
    }
}

class B extend A {
   public funtion test($a $b){
         $result = $a+10;
         echo " Result ".$result.";
    }
}

$out = new A();

 echo " Result " . $a->(5). ";

$out = new B();

 echo " Result " . $a->(5 6). ";

But After Php 5 It code not working they are changed.


Magical code (automatic callying function).


function _call($name , $arg){
    if($name  == "add"){
        switch (count ($arg)){
            case 0: return 0;
            case 1:return &arg[0];
            case 2:return $arg[0]+$arg[1];
        }
    }
}

output 


$out = new A();

 echo " Result " . $a->add(5). ";
 
$out = new A();

 echo " Result " . $b->add(5, 9). ";

 ---------------------------------------------

 overridding 

 funtion overridding is same as other oop's programming lanquage .in function overridding is have same 
 function name with in number of arguments .
 =========================================================

 What is Encapsulation  ?

 The Encapsulation is an  attribute of a object. it contains all the data which is hidden . That hidden data can be 

 restricted to the member of the class.